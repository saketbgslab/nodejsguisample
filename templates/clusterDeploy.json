{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "0.9.0.0",
    "parameters":{
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the HDInsight cluster to create."
            }
        },
        "clusterLoginUserName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "clusterLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location where all azure resources will be deployed."
            }
        },
        "clusterVersion": {
            "type": "string",
            "defaultValue": "3.6",
            "metadata": {
                "description": "HDInsight cluster version."
            },
            "allowedValues": [
                "3.5",
                "3.6"
            ]
        },
        "clusterKind": {
            "type": "string",
            "defaultValue": "HADOOP",
            "metadata": {
                "description": "The type of the HDInsight cluster to create."
            }
        },
        "sshUserName": {
            "type": "string",
            "defaultValue": "sshuser",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },

        "storageAccNewOrExisting":{
            "type": "string",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadat": {
                "description":"The value should be new if wants to create a new storage account"
            }
        },

        "storageAccountName":{
            "type": "string",
            "metadata": {
                "description": "The name of the storage account linked with cluster"
            }
        },

        "storageAccountkind":{
            "type": "string",
            "defaultValue": "Storage",
            "metadata": {
                "description":"type of storage account"
            },
            "allowedValues": [
                "Storage",
                "StorageV2",
                "BlobStorage"
            ]
        },

        "storageAccountType":{
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description":"Replication type of storage account to be created "
            },
            "allowedValues": [
                "Standard_ZRS",
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ]
        },

        "nodeVmSize":{
            "type": "string",
            "defaultValue": "Standard_D12_V2",
            "metadata": {
                "description": "Size of VMs of nodes"
            }
        },

        "workerNodeInstanceCount":{
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description":"Max VM instances to be created on the worker node"
            }
        }
    },

    "variables": {
      "nodeOsType": "Linux",
      "blobURI": ".blob.core.windows.net"
    },

    "resources": [
        {
            "condition": "[equals(parameters('storageAccNewOrExisting'),'new')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "[parameters('storageAccountkind')]",
            "properties": {}
        },

        {
            "apiVersion": "2015-03-01-preview",
            "name": "[parameters('clusterName')]",
            "type": "Microsoft.HDInsight/clusters",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]"
            ],
            "properties": {
                "clusterVersion": "[parameters('clusterVersion')]",
                "osType": "[variables('nodeOsType')]",
                "tier": "standard",
                "clusterDefinition": {
                    "kind": "[parameters('clusterKind')]",
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
                            "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
                        }
                    }
                },
                "storageProfile": {
                    "storageaccounts": [
                        {
                            "name": "[concat(parameters('storageAccountName'),variables('blobURI'))]",
                            "isDefault": true,
                            "container": "[concat(parameters('clusterName'), uniqueString(resourceGroup().id))]",
                            "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                        }
                    ]
                },
                "computeProfile": {
                    "roles": [
                        {
                            "name": "headnode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 2,
                            
                            "hardwareProfile": {
                                "vmSize": "[parameters('nodeVmSize')]"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUserName')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": null,
                            "scriptActions": []
                        },
                        {
                            "name": "workernode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": "[parameters('workerNodeInstanceCount')]",
                            "hardwareProfile": {
                                "vmSize": "[parameters('nodeVmSize')]"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUserName')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": null,
                            "scriptActions": []
                        },
                        {
                            "name": "zookeepernode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": 3,
                            "hardwareProfile": {
                                "vmSize": "Small"
                            },
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "username": "[parameters('sshUserName')]",
                                    "password": "[parameters('sshPassword')]"
                                }
                            },
                            "virtualNetworkProfile": null,
                            "scriptActions": []
                        }
                    ]
                }
            }
        }
    ],
    
    "outputs": {
    }

}

